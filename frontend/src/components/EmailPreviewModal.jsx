import { X, Copy, Download, Mail, ExternalLink, CheckCircle } from 'lucide-react'
import { useState } from 'react'

export default function EmailPreviewModal({ email, onClose }) {
  const [copied, setCopied] = useState(false)
  const [previewMode, setPreviewMode] = useState('html') // 'html' or 'text'

  const formatEmailHTML = (body) => {
    // Convert plain text to HTML with formatting
    return body
      .split('\n\n')
      .map(para => `<p style="margin-bottom: 1rem; line-height: 1.6;">${para.replace(/\n/g, '<br>')}</p>`)
      .join('')
  }

  const getFullEmailHTML = () => {
    const priorityColor = {
      'CRITICAL': '#ef4444',
      'HIGH': '#f59e0b',
      'MEDIUM': '#10b981',
      'LOW': '#6b7280'
    }[email.priority] || '#6b7280'

    return `
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <style>
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
      line-height: 1.6;
      color: #333;
      max-width: 600px;
      margin: 0 auto;
      padding: 20px;
    }
    .priority-badge {
      display: inline-block;
      padding: 4px 12px;
      border-radius: 4px;
      font-size: 12px;
      font-weight: bold;
      color: white;
      background-color: ${priorityColor};
      margin-bottom: 20px;
    }
    .header {
      border-bottom: 2px solid #e5e7eb;
      padding-bottom: 20px;
      margin-bottom: 20px;
    }
    .footer {
      border-top: 2px solid #e5e7eb;
      padding-top: 20px;
      margin-top: 30px;
      font-size: 14px;
      color: #6b7280;
    }
    h2 {
      color: #1f2937;
      margin-top: 0;
    }
    p {
      margin-bottom: 1rem;
    }
    .signature {
      margin-top: 30px;
      font-style: italic;
    }
  </style>
</head>
<body>
  <div class="header">
    <span class="priority-badge">${email.priority} PRIORITY</span>
    <h2>${email.subject}</h2>
  </div>

  ${formatEmailHTML(email.body)}

  <div class="signature">
    <p>Best regards,<br>
    Customer Experience Team<br>
    ${email.department}</p>
  </div>

  <div class="footer">
    <p><small>This is an automated sentiment alert generated by AI analysis.</small></p>
  </div>
</body>
</html>
    `.trim()
  }

  const copyAsHTML = async () => {
    const html = getFullEmailHTML()

    try {
      await navigator.clipboard.writeText(html)
      setCopied(true)
      setTimeout(() => setCopied(false), 2000)
    } catch (error) {
      console.error('Copy failed:', error)
    }
  }

  const downloadHTML = () => {
    const html = getFullEmailHTML()
    const blob = new Blob([html], { type: 'text/html' })
    const url = URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = `email-${email.department.toLowerCase().replace(/\s+/g, '-')}.html`
    a.click()
    URL.revokeObjectURL(url)
  }

  const openInGmail = () => {
    const subject = encodeURIComponent(email.subject)
    const body = encodeURIComponent(email.body)
    window.open(`https://mail.google.com/mail/?view=cm&fs=1&su=${subject}&body=${body}`, '_blank')
  }

  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/80">
      <div className="bg-white rounded-2xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden">
        {/* Modal Header */}
        <div className="bg-gradient-to-r from-primary to-secondary p-6 text-white">
          <div className="flex items-center justify-between mb-2">
            <h2 className="text-2xl font-bold flex items-center gap-2">
              <Mail className="w-6 h-6" />
              Email Preview
            </h2>
            <button
              onClick={onClose}
              className="p-2 hover:bg-white/20 rounded-lg transition-colors"
            >
              <X className="w-6 h-6" />
            </button>
          </div>
          <p className="text-white/80">{email.department}</p>
        </div>

        {/* Mode Toggle */}
        <div className="bg-gray-100 px-6 py-3 flex gap-2">
          <button
            onClick={() => setPreviewMode('html')}
            className={`px-4 py-2 rounded-lg transition-colors ${
              previewMode === 'html'
                ? 'bg-white shadow-md text-gray-900'
                : 'text-gray-600 hover:bg-white/50'
            }`}
          >
            HTML Preview
          </button>
          <button
            onClick={() => setPreviewMode('text')}
            className={`px-4 py-2 rounded-lg transition-colors ${
              previewMode === 'text'
                ? 'bg-white shadow-md text-gray-900'
                : 'text-gray-600 hover:bg-white/50'
            }`}
          >
            Plain Text
          </button>
        </div>

        {/* Email Content */}
        <div className="p-6 overflow-y-auto max-h-[50vh] bg-white">
          {previewMode === 'html' ? (
            <div
              dangerouslySetInnerHTML={{ __html: getFullEmailHTML() }}
              className="prose max-w-none"
            />
          ) : (
            <div className="font-mono text-sm whitespace-pre-wrap text-gray-800">
              <div className="mb-4">
                <strong>To:</strong> {email.to}<br />
                <strong>Subject:</strong> {email.subject}<br />
                <strong>Priority:</strong> {email.priority}
              </div>
              <div className="border-t pt-4">
                {email.body}
              </div>
            </div>
          )}
        </div>

        {/* Action Buttons */}
        <div className="bg-gray-100 p-6 flex gap-3 flex-wrap">
          <button
            onClick={copyAsHTML}
            className="px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg flex items-center gap-2 transition-colors"
          >
            {copied ? (
              <>
                <CheckCircle className="w-5 h-5" />
                Copied!
              </>
            ) : (
              <>
                <Copy className="w-5 h-5" />
                Copy HTML
              </>
            )}
          </button>

          <button
            onClick={downloadHTML}
            className="px-6 py-3 bg-purple-600 hover:bg-purple-700 text-white rounded-lg flex items-center gap-2 transition-colors"
          >
            <Download className="w-5 h-5" />
            Download HTML
          </button>

          <button
            onClick={openInGmail}
            className="px-6 py-3 bg-red-600 hover:bg-red-700 text-white rounded-lg flex items-center gap-2 transition-colors"
          >
            <ExternalLink className="w-5 h-5" />
            Open in Gmail
          </button>
        </div>
      </div>
    </div>
  )
}
